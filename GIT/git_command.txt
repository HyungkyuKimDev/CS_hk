＃参考のサイト：１。https://git-scm.com/ #(gitのサイトのドキュメント)　２。https://docs.github.com/ja　＃（Github　Docs）　

git　command

#clone
>
　　リモートリポジトリを複製するコマンドだ。
　　リモートリポジトリからローカルリポジトリにファイルを持ってくれる。
　
　　> cloneコマンドの使い方
　　$ git clone [リポジトリパス]　//入力したリポジトリを現在のリポジトリに複製する。
　　$ git clone https://github.com/[ユーザー名]/[リポジトリ名].git　//GitHubのリポジトリを指定した時の使い方
   >> privateリポジトリの場合はパスワード認証かSSH公開鍵の設定が必要だ。


＃branch
>
  ブランチを作り、並び、名を変更し、削除するコマンドだ。

  > branchコマンドの使い方
  $ git branch //リポジトリのブランチを並ぶ
  $ git branch <branch> //新しいブランチを作る。
  $ git branch -d <branch> //そのブランチを削除する。マージされてない変更がある場合は削除できない。
  $ git branch -D <branch> //そのブランチをマージされてない変更があっても削除できる。
  $ git branch -m <branch> //そのブランチの名を変更する。
  $ git branch -a //ブランチを全部並ぶ。


#checkout
>
　　ブランチを切り替えるコマンドだ。

　　＞ checkoutコマンドの使い方
　　$ git checkout <branch> //そのブランチで切り替える。
　　//コマンドの結果の表紙
　　Switched to branch ’<branch>'　


#log
>
　　リポジトリの中に記録されているコミット履歴を確認するコマンドだ。

　　＞　logコマンドの使い方
　　$　git log //コミット履歴を確認する。
   //コマンドの結果の表紙
   commit <コミットのID＞　
　　Author: ＜コミットした人の名＞
   Date: <コミットした日付＞
   ＜コミットメッセージ＞


#status
>
  現在のブランチ、コミットの状況、作業しているファイルの状況を確認するコマンドだ。

  ＞ statusコマンドの使い方
  ＄ git status //現在のブランチ、コミットの状況、作業しているファイルの状況を確認す
　 Untracked files: //ファイルが作られたが”git add"でGitには追加されなかった。
　　Changes to be committed : //ファイルが”git add"でGitには追加されなかった。
　　modified　：//ファイルが変更された。


#add
>
　　ワークツリーのファイルをインデックスに移動するコマンドだ。
　　addコマンドの後コミットが可能な状況になる。

　　＞　addコマンドの使い方
　　$ git add ＜ファイル名＞ //ワークツリーのファイルをインデックスに移動する。


#commit
>
　　ファイル、ディレクトリの追加・変更をリポジトリに保存するコマンドだ。
　　コミットにはコメントがあり、変更の内容を記録して変更の内容を分かりやすく作る。

　　＞　commitコマンドの使い方
　　$ git commit // commitコマンドを実行

　　<コメント＞　// 変更の内容をコメントで分かりやすく作る。



#diff
>
　　変更差分を確認するコマンドだ。
　　
　　確認できる差分は
　　１。ワークツリーとインデックスの差分
　　２。インデックスとリポジトリの差分
　　３。あるファイルとの差分
　　
　　diffコマンドの使い方
　　$ git diff // 基本的にはワークツリーとインデックスの差分で設定された。
　　$ git diff --staged //　インデックスとリポジトリの差分を確認
　　$ git diff <ファイル名＞　//　あるファイルの差分を確認


#push
>
　　リモートリポジトリにブランチの履歴を更新するコマンドだ。
　　
　　pushコマンドの使い方
　　＄ git push ＜リモートリポジトリの名＞　＜ローカルブランチ＞ // ローカルブランチをリモートブランチに反映する。


#pull
>
　　リモートリポジトリの履歴をローカルブランチに反映するコマンドだ。

　　pullコマンドの使い方
　　$ git pull <リモートリポジトリ＞　＜ローカルブランチ＞　// リモートブランチをローカルブランチに反映する。
　　$ git pull // リモートリポジトリとローカルブランチの名を入れなかった場合はアップストリームブランチが実行される。


#fetch
>　　　  
　　pullと違うにコミットの履歴はアップデートするが、マージはしないコマンドだ。
　　
　　fetchコマンドの使い方
　　$ git fetch // リモートリポジトリの全てのブランチの履歴を確認
   $ git fetch <リモートリポジトリ名＞　// リモートリポジトリが複数登録されている場合はあるリモートリポジトリを指定
   $ git fetch <リモートレポジトリ名> <リモートレポジトリのブランチ名> //　リモートリポジトリのあるブランチを指定

#merge
>
　　現在のブランチへ他のブランチの変更をは取り込むコマンドだ。
　　マージする時に同じところに変更があればコンフリクトができる。
　　その場合はそのところに修正し、アルブランチの内容を削除して解決する。

　　mergeの種類
　　１。fast-forward // あるブランチが他のブランチの位置に移動してマージする場合
　　２。no-fast-forward //　２つのブランチがそれぞれ別々の開発が進んだ場合

　　mergeの使い方
　　$ git merge <マージするブランチ＞　// 現在のブランチと<マージするブランチ＞がマージする。　　

　　